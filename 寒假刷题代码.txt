存在重复元素：https://leetcode-cn.com/problems/contains-duplicate/

class Solution {
public:
	bool containsDuplicate(vector<int>& nums) {
		if (nums.empty())
			return false;
		sort(nums.begin(), nums.end());
		for (int i = 0; i < nums.size() - 1; i++)
		{
			if (nums[i] == nums[i + 1])
				return true;
		}
		return false;
	}
};


长键按入：https://leetcode-cn.com/problems/long-pressed-name/

class Solution {
public:
    bool isLongPressedName(string name, string typed) {
            if (name.compare(typed) == 0)
                return true;
            if (name.size() == typed.size())
                return false;
            int i = 0,j = 0;
            for (; j < typed.size(); j++)
            {
                if (i < name.size() && name[i] == typed[j])
                {
                    i++;
                }
                else if (i == 0)
                    return false;
                else if (name[i - 1] != typed[j])
                    return false;
            }
            if (i == name.size())
                return true;
            return false;
    }
};

有序数组的平方：https://leetcode-cn.com/problems/squares-of-a-sorted-array/

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        for (auto&e : nums)
            e *= e;
        sort(nums.begin(), nums.end());
        return nums;
    }
};

仅仅反转字母：https://leetcode-cn.com/problems/reverse-only-letters/

class Solution {
public:
    string reverseOnlyLetters(string S) {
        int begin=0,end=S.size()-1;

        while(begin<end)
        {
            while(begin<end)
            {
                if(isalpha(S[begin]))
                    break;
                begin++;
            }

            while(begin<end)
            {
                if(isalpha(S[end]))
                    break;
                end--;
            }

            if(begin>=end)
                break;
            else
            {
                swap(S[begin],S[end]);
                begin++;
                end--;
            }
        }
        return S;
    }
};